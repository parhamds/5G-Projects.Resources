---
# Source: sd-core/charts/omec-user-plane/templates/configmap-upf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: upf2
  labels:
    release: sd-core
    app: upf2
data:
  upf.json: "{\"access\":{\"ifname\":\"access\"},\"core\":{\"ifname\":\"core\"},\"cpiface\":{\"dnn\":\"internet\",\"hostname\":\"upf2\",\"http_port\":\"8080\"},\"enable_notify_bess\":true,\"gtppsc\":true,\"hwcksum\":true,\"log_level\":\"trace\",\"max_sessions\":50000,\"measure_flow\":false,\"measure_upf\":true,\"mode\":\"af_packet\",\"notify_sockaddr\":\"/pod-share/notifycp\",\"qci_qos_config\":[{\"burst_duration_ms\":10,\"cbs\":50000,\"ebs\":50000,\"pbs\":50000,\"priority\":7,\"qci\":0}],\"slice_rate_limit_config\":{\"n3_bps\":1000000000,\"n3_burst_bytes\":12500000,\"n6_bps\":1000000000,\"n6_burst_bytes\":12500000},\"table_sizes\":{\"appQERLookup\":200000,\"farLookup\":150000,\"pdrLookup\":50000,\"sessionQERLookup\":100000},\"workers\":1}"
  bessd-poststart.sh: |
    #!/bin/bash
    
    # Copyright 2020-present Open Networking Foundation
    #
    # SPDX-License-Identifier: Apache-2.0
    
    set -ex
    
    until bessctl run /opt/bess/bessctl/conf/up4; do
        sleep 2;
    done;
---
# Source: sd-core/charts/omec-user-plane/templates/service-upf.yaml
apiVersion: v1
kind: Service
metadata:
  name: upf2
  labels:
    release: sd-core
    app: upf2
spec:
  type: ClusterIP
  selector:
    release: sd-core
    app: upf2
  ports:
  - name: pfcp
    protocol: UDP
    port: 8806
---
# Source: sd-core/charts/omec-user-plane/templates/service-upf.yaml
apiVersion: v1
kind: Service
metadata:
  name: upf2-http
  labels:
    release: sd-core
    app: upf2
spec:
  type: ClusterIP
  selector:
    release: sd-core
    app: upf2
  ports:
  - name: bess-web
    protocol: TCP
    port: 8000
  - name: prometheus-exporter
    protocol: TCP
    port: 8080
---
# Source: sd-core/charts/omec-user-plane/templates/statefulset-upf.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: upf2
  labels:
    release: sd-core
    app: upf2
spec:
  replicas: 1
  serviceName: upf2-headless
  selector:
    matchLabels:
      release: sd-core
      app: upf2
  template:
    metadata:
      labels:
        release: sd-core
        app: upf2
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {
            "name": "lb-upf2-net",
            "interface": "access",
            "ips": ["192.168.252.3/24"]
          },
          {
            "name": "core-upf2-net",
            "interface": "core",
            "ips": ["192.168.250.3/24"]
          }
        ]'
    spec:
      shareProcessNamespace: true
      imagePullSecrets:
        - name: aether.registry
      initContainers:
      - name: bess-init
        image: "omecproject/upf-epc-bess:master-9a4d86c"
        imagePullPolicy: "IfNotPresent"
        command: ["sh", "-xec"]
        args:
        - ip route replace 192.168.251.0/24 via 192.168.252.102;
          ip route replace default via 192.168.250.102 metric 110;
          ip route replace 192.168.254.0/24 via 192.168.250.102;
          ip route replace 10.0.2.15 via 169.254.1.1;
          iptables -I OUTPUT -p icmp --icmp-type port-unreachable -j DROP;
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        resources:
          limits:
            cpu: 128m
            memory: 64Mi
          requests:
            cpu: 128m
            memory: 64Mi
      containers:
      - name: bessd
        image: "omecproject/upf-epc-bess:master-9a4d86c"
        imagePullPolicy: "IfNotPresent"
        stdin: true
        tty: true
        securityContext:
          privileged: true
          runAsUser: 0
          capabilities:
            add:
            - IPC_LOCK
        stdin: true
        tty: true
        command: ["/bin/bash", "-xc"]
        args:
          - bessd -m 0 -f -grpc-url=0.0.0.0:10514
        lifecycle:
          postStart:
            exec:
              command: ["/etc/bess/conf/bessd-poststart.sh"]
        livenessProbe:
          tcpSocket:
            port: 10514
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          requests:
          limits:
        env:
          - name: CONF_FILE
            value: /etc/bess/conf/upf.json
        volumeMounts:
          - name: shared-app
            mountPath: /pod-share
          - name: configs
            mountPath: /etc/bess/conf
      - name: routectl
        image: "omecproject/upf-epc-bess:master-9a4d86c"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: PYTHONUNBUFFERED
            value: "1"
        command: ["/opt/bess/bessctl/conf/route_control.py"]
        args:
          - -i
          - access
          - core
      - name: web
        image: "omecproject/upf-epc-bess:master-9a4d86c"
        imagePullPolicy: "IfNotPresent"
        command: ["/bin/bash", "-xc", "bessctl http 0.0.0.0 8000"]
      - name: pfcp-agent
        image: "parhamds/upfs-pfcpiface:v0.0.69"
        imagePullPolicy: "IfNotPresent"
        command: ["pfcpiface"]
        args:
          - -config
          - /tmp/conf/upf.json
        volumeMounts:
          - name: shared-app
            mountPath: /pod-share
          - name: configs
            mountPath: /tmp/conf
      - name: arping
        image: "registry.aetherproject.org/tools/busybox:stable"
        imagePullPolicy: "IfNotPresent"
        command: ["sh", "-xc"]
        args:
          - |
            while true; do
              # arping does not work - BESS graph is still disconnected
              #arping -c 2 -I access 192.168.252.102
              #arping -c 2 -I core 192.168.250.102
              ping -c 2 192.168.252.102
              ping -c 2 192.168.250.102
              sleep 10
            done
        resources:
          limits:
            cpu: 128m
            memory: 64Mi
          requests:
            cpu: 128m
            memory: 64Mi
      volumes:
      - name: configs
        configMap:
          name: upf2
          defaultMode: 493
      - name: shared-app
        emptyDir: {}
